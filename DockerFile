# Step 1: Build stage
FROM rust:1.82.0 as builder

# Set the working directory inside the container
WORKDIR /app

# Copy the Cargo.toml and Cargo.lock files to the container
COPY Cargo.toml Cargo.lock ./

# Create a dummy file to cache dependencies
RUN touch src/main.rs

# Fetch the dependencies (this will be cached unless Cargo.toml or Cargo.lock changes)
RUN cargo build --release

# Copy the entire source code into the container
COPY . .

# Build the project in release mode
RUN cargo build --release

# Step 2: Run stage
FROM debian:bullseye-slim

# Install necessary dependencies (e.g., openssl, system libraries, etc.)
RUN apt-get update \
    && apt-get install -y \
    libssl-dev \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Copy the compiled binary from the builder stage
COPY --from=builder /app/target/release/my_app /usr/local/bin/product_service

# Expose the port your app runs on (e.g., 8080)
EXPOSE 3001

# Set the entrypoint to your binary
CMD ["product_service"]

# Optional: Set environment variables (if any)
# ENV DATABASE_URL=your_database_url